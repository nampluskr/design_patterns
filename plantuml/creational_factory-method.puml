@startuml
!pragma layout smetana
'left to right direction
'skin rose
skinparam classAttributeIconSize 0
'skinparam groupInheritance 2

title [Creational] Factory Method

abstract Product {
  + {abstract} doStuff()
}
class ConcreteProductA {
  + doStuff()
}
class ConcreteProductB {
  + doStuff()
}
class ConcreteProductC {
  + doStuff()
}

abstract Creator {
  + {abstract} createProduct() : Product
  + operation()
}
class ConcreteCreatorA {
  + createProduct() : Product
}
class ConcreteCreatorB {
  + createProduct() : Product
}
class ConcreteCreatorC {
  + createProduct() : Product
}

Product <|-u- ConcreteProductA
Product <|-u- ConcreteProductB
Product <|-u- ConcreteProductC

Creator <|-d- ConcreteCreatorA
Creator <|-d- ConcreteCreatorB
Creator <|-d- ConcreteCreatorC

ConcreteCreatorA .d.> ConcreteProductA : <<create>>
ConcreteCreatorB .d.> ConcreteProductB : <<create>>
ConcreteCreatorC .d.> ConcreteProductC : <<create>>

'Creator ..> Product

Client .r.> Creator : <<use>>

note as N1
void operation() {
  product = createProduct()
  product.doStuff()
}
end note

N1 -l- Creator::operation

Note as N2
factory = ConcreteCreatorA()
factory.operation()
end note

N2 -d- Client

hide empty members

@enduml
